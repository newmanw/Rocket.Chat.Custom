name: merge

on:
  workflow_dispatch:
  schedule:

    - cron: "0 0 * * *"

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.latest_version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set Latest Release
      id: latest_version
      run: |
        git fetch --tags
        echo ::set-output name=version::$(git tag --sort=committerdate | tail -1)
    - name: Clone Rocket.Chat.ReactNative
      uses: actions/checkout@master
      with:
        repository: RocketChat/Rocket.Chat.ReactNative
        path: 'Rocket.Chat.ReactNative.Repo'
    - name: Set Current Release
      id: current_version
      run: |
        git fetch --tags
        echo ::set-output name=version::$(git tag --sort=committerdate | tail -1)
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: List Releases
      run: |
        echo latest release: ${{steps.latest_version.outputs.version}}
        echo current release: ${{steps.current_version.outputs.version}}

  release:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.latest_version != needs.check.outputs.current_version
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
          tag_name: ${{ needs.check.outputs.current_version }}
          release_name: ${{ needs.check.outputs.current_version }}
          body: |
            RocketChat.ReactNative Version ${{ needs.check.outputs.current_version }}
          draft: false
          prerelease: false
    - name: Output
      run: |
        echo ::set-output name=release_upload_url::steps.create_release.outputs.upload_url
        echo Setting upload url
        echo ${{ steps.create_release.outputs.upload_url }}
        echo TO
        echo ${{ steps.create_release.outputs.upload_url }}

  ios:
   runs-on: macos-latest
   needs: release

   steps:
    - uses: actions/checkout@v2
    - name: Clone Rocket.Chat.ReactNative
      uses: actions/checkout@master
      with:
        repository: RocketChat/Rocket.Chat.ReactNative
        path: 'Rocket.Chat.ReactNative.Repo'
        fetch-depth: 0
    - name: Check single-server branch
      run: |
        git checkout single-server
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Install Dependencies
      run: |
        gem install xcodeproj
        npm install
    - name: merge styles
      run: |
        npm run merge ./Rocket.Chat.ReactNative.Repo
    - name: Setup plist
      run: |
        npm run ios ./Rocket.Chat.ReactNative.Repo
    - name: Install Utilities
      run: |
        brew install automake
        brew install libtool
    - name: Update Pod Repo
      run: |
        pod repo update
    - name: React Native Bundle
      run: |
        yarn
        npx pod-install
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Configure Signing Certificate and Provisioning Profiles
      run: |
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.CERTIFICATE_PASSPHRASE }}" --output Rocket.Chat.ReactNative.Repo/ios/development.p12 ./.github/secrets/development.p12.gpg
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.PROFILE_PASSPHRASE }}" --output Rocket.Chat.ReactNative.Repo/ios/RocketChatRN.mobileProvision ./.github/secrets/RocketChatRN.mobileProvision.gpg
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.PROFILE_PASSPHRASE }}" --output Rocket.Chat.ReactNative.Repo/ios/RocketChatRN_NotificationService.mobileProvision ./.github/secrets/RocketChatRN_NotificationService.mobileProvision.gpg
        gpg --quiet --batch --yes --decrypt --passphrase="${{ secrets.PROFILE_PASSPHRASE }}" --output Rocket.Chat.ReactNative.Repo/ios/RocketChatRN_ShareExtension.mobileProvision ./.github/secrets/RocketChatRN_ShareExtension.mobileProvision.gpg
    - name: Build
      env: 
        KEYCHAIN_NAME: "${{ secrets.KEYCHAIN_NAME }}"
        KEYCHAIN_PASSWORD: "${{ secrets.KEYCHAIN_PASSWORD }}"
        CERTIFICATE_PASSWORD: "${{ secrets.CERTIFICATE_PASSWORD }}"
      run: |
        fastlane build_whitelabel
      working-directory: Rocket.Chat.ReactNative.Repo/ios
    - name: Show upload url
      run: |
        echo Upload URL
        echo ${{ needs.release.outputs.release_upload_url }} 
      working-directory: Rocket.Chat.ReactNative.Repo/ios
    - name: Bundle Artifacts
      run: |
         tar -czvf RocketChat.xcarchive.tar.gz *.xcarchive/
      working-directory: Rocket.Chat.ReactNative.Repo/ios/build
    - name: Upload Artifacts
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.release_upload_url }} 
        asset_path: Rocket.Chat.ReactNative.Repo/ios/build/RocketChat.xcarchive.tar.gz
        asset_name: RocketChat.xcarchive.tar.gz
        asset_content_type: application/octet-stream

  android:
    runs-on: ubuntu-latest
    needs: release
    if: needs.check.outputs.latest_version != needs.check.outputs.current_version

    steps:
    - uses: actions/checkout@v2
    - name: Clone Rocket.Chat.ReactNative
      uses: actions/checkout@master
      with:
        repository: RocketChat/Rocket.Chat.ReactNative
        path: 'Rocket.Chat.ReactNative.Repo'
        fetch-depth: 0
    - name: Check single-server branch
      id: checkout
      run: |
        git checkout single-server
        echo ::set-output name=version_code::$(git rev-list --count HEAD)
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Dependencies
      run: |
        npm install
    - name: merge styles
      run: |
        npm run merge ./Rocket.Chat.ReactNative.Repo
    - name: React Native Bundle
      run: |
        yarn && npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Setup Keystore
      run: |
        echo "${{ secrets.KEYSTORE }}" > release.b64
        base64 -d release.b64 > release.keystore
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Build and Sign APK
      uses: eskatos/gradle-command-action@v1
      with:
        wrapper-directory: Rocket.Chat.ReactNative.Repo/android
        build-root-directory: Rocket.Chat.ReactNative.Repo/android
        arguments: assembleOfficialFossRelease
          -PAPPLICATION_ID=mil.dod.nga.rocketchat
          -PVERSIONCODE=${{steps.checkout.outputs.version_code}}
          -PKEYSTORE=../../release.keystore
          -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
          -PKEY_ALIAS=${{ secrets.KEY_ALIAS }}
          -PKEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
        wrapper-cache-enabled: true
        dependencies-cache-enabled: true
        configuration-cache-enabled: true
    - name: Upload Artifacts
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.release_upload_url }} 
        asset_path: Rocket.Chat.ReactNative.Repo/android/app/build/outputs/apk/officialFoss/release/app-official-foss-release.apk
        asset_name: app-official-foss-release.apk
        asset_content_type: application/octet-stream
