name: merge

on:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ steps.latest_version.outputs.version }}
      current_version: ${{ steps.current_version.outputs.version }}

    steps:
    - uses: actions/checkout@v2
    - name: Set Latest Release
      id: latest_version
      run: |
        git fetch --tags
        echo ::set-output name=version::$(git tag --sort=committerdate | tail -1)
    - name: Clone Rocket.Chat.ReactNative
      uses: actions/checkout@master
      with:
        repository: RocketChat/Rocket.Chat.ReactNative
        path: 'Rocket.Chat.ReactNative.Repo'
    - name: Set Current Release
      id: current_version
      run: |
        git fetch --tags
        echo ::set-output name=version::$(git tag --sort=committerdate | tail -1)
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: List Releases
      run: |
        echo latest release: ${{steps.latest_version.outputs.version}}
        echo current release: ${{steps.current_version.outputs.version}}

  release:
    runs-on: ubuntu-latest
    needs: check
    if: needs.check.outputs.latest_version != needs.check.outputs.current_version
    outputs:
      release_upload_url: ${{ steps.release_upload_url.outputs.version }}

    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
          tag_name: ${{ needs.check.outputs.current_version }}
          release_name: ${{ needs.check.outputs.current_version }}
          body: |
            RocketChat.ReactNative Version ${{ needs.check.outputs.current_version }}
          draft: false
          prerelease: false
    - name: Output
      run: |
        echo ::set-output name=release_upload_url::steps.create_release.outputs.upload_url

  ios:
   runs-on: macos-latest
   needs: release

   steps:
    - uses: actions/checkout@v2
    - name: Clone Rocket.Chat.ReactNative
      uses: actions/checkout@master
      with:
        repository: RocketChat/Rocket.Chat.ReactNative
        path: 'Rocket.Chat.ReactNative.Repo'
        fetch-depth: 0
    - name: TODO TEMP - Target old release
      run: |
        git checkout single-server
        git checkout e6d6b83b5d32b1bd4651281b2274b48585a24859
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Install Dependencies
      run: |
        npm install
    - name: merge styles
      run: |
        npm run merge ./Rocket.Chat.ReactNative.Repo
    - name: Setup plist
      run: |
        npm run ios ./Rocket.Chat.ReactNative.Repo
    - name: Install Utilities
      run: |
        brew install automake
        brew install libtool
    - name: Update Pod Repo
      run: |
        pod repo update
    - name: React Native Bundle
      run: |
        yarn
        npx pod-install
      working-directory: Rocket.Chat.ReactNative.Repo
    - name: Build
      run: |
        xcodebuild -workspace RocketChatRN.xcworkspace -scheme RocketChatRN -allowProvisioningUpdates -configuration AppStoreDistribution archive -archivePath RocketChat.xcarchive CODE_SIGNING_ALLOWED=NO
      working-directory: Rocket.Chat.ReactNative.Repo/ios
    - name: Show upload url
      run: |
        echo Upload URL
        echo ${{ needs.release.outputs.release_upload_url }} 
      working-directory: Rocket.Chat.ReactNative.Repo/ios
    - name: Upload Artifacts
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.release_upload_url }} 
        asset_path: Rocket.Chat.ReactNative.Repo/ios/RocketChat.xcarchive
        asset_name: RocketChat.xcarchive
        asset_content_type: application/octet-stream

  # android:
  #   runs-on: ubuntu-latest
  #   needs: check
  #   if: needs.check.outputs.latest_version != needs.check.outputs.current_version

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Clone Rocket.Chat.ReactNative
  #     uses: actions/checkout@master
  #     with:
  #       repository: RocketChat/Rocket.Chat.ReactNative
  #       path: 'Rocket.Chat.ReactNative.Repo'
  #   - name: Use Node.js
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: '14.x'
  #   - name: set up JDK 1.8
  #     uses: actions/setup-java@v1
  #     with:
  #       java-version: 1.8
  #   - name: Install Dependencies
  #     run: |
  #       npm install
  #   - name: merge styles
  #     run: |
  #       npm run merge ./Rocket.Chat.ReactNative.Repo
  #   - name: React Native Bundle
  #     run: |
  #       yarn && npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle
  #     working-directory: Rocket.Chat.ReactNative.Repo
  #   - name: Setup Keystore
  #     run: |
  #       echo "${{ secrets.KEYSTORE }}" > release.b64
  #       base64 -d release.b64 > android/app/release.keystore
  #     working-directory: Rocket.Chat.ReactNative.Repo
  #   - name: Build and Sign APK
  #     uses: eskatos/gradle-command-action@v1
  #     with:
  #       wrapper-directory: Rocket.Chat.ReactNative.Repo/android
  #       build-root-directory: Rocket.Chat.ReactNative.Repo/android
  #       arguments: assembleOfficialFossRelease
  #         -PKEYSTORE=release.keystore
  #         -PKEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
  #         -PKEY_ALIAS=${{ secrets.KEY_ALIAS }}
  #         -PKEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
  #       wrapper-cache-enabled: true
  #       dependencies-cache-enabled: true
  #       configuration-cache-enabled: true
  #   - name: Create Release
  #     id: create_release
  #     uses: actions/create-release@v1
  #     env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  #     with:
  #         tag_name: ${{ needs.check.outputs.current_version }}
  #         release_name: ${{ needs.check.outputs.current_version }}
  #         body: |
  #           RocketChat.ReactNative Version ${{ needs.check.outputs.current_version }}
  #         draft: false
  #         prerelease: false
  #   - name: Upload Artifacts
  #     uses: actions/upload-release-asset@v1
  #     env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }} 
  #       asset_path: Rocket.Chat.ReactNative.Repo/android/app/build/outputs/apk/officialFoss/release/app-official-foss-release.apk
  #       asset_name: app-official-foss-release.apk
  #       asset_content_type: application/octet-stream
